# this is profiling need to uncomment here and in the end
# zmodload zsh/zprof # top of your .zshrc file
date "+%s.%N"

export DOTFILES=$HOME/.dotfiles
export ZSH=$DOTFILES/zsh

ZSH_THEME="agnoster"

# Source Prezto.
# ZDOTDIR=$DOTFILES/zsh
# if [[ -s "$ZSH/.zprezto/init.zsh" ]]; then
#   source "$ZSH/.zprezto/init.zsh"
#   autoload -Uz promptinit
#   promptinit
#   prompt steeef
# fi

# define the code directory
if [[ -d ~/code ]]; then
    export CODE_DIR=~/code
fi

# load all zsh config files
for config ($ZSH/**/*.zsh) source $config

if [[ -a ~/.localrc ]]; then
    source ~/.localrc
fi

# if [[ -a ~/.docker_enter ]]; then
# 	source ~/.docker_enter
# fi


# initialize autocomplete - do this only once a day (speed up)
autoload -Uz compinit
for dump in ~/.zcompdump(N.mh+24); do
  compinit
done
compinit -C

# autoload -U compinit
# compinit

# for config ($ZSH/**/*completion.sh) source $config

export EDITOR='nvim'

export PATH=/usr/local/bin:$PATH


# add /usr/local/sbin
if [[ -d /usr/local/sbin ]]; then
    export PATH=/usr/local/sbin:$PATH
fi

# adding path directory for custom scripts
export PATH=$DOTFILES/bin:$PATH

# check for custom bin directory and add to path
if [[ -d ~/bin ]]; then
    export PATH=~/bin:$PATH
fi

[ -z "$TMUX" ] && export TERM=xterm-256color

# # source nvm
# export NVM_DIR=~/.nvm
# source $(brew --prefix nvm)/nvm.sh

# . ~/z/z.sh
if command -v brew >/dev/null 2>&1; then
	# Load rupa's z if installed
	[ -f $(brew --prefix)/etc/profile.d/z.sh ] && source $(brew --prefix)/etc/profile.d/z.sh
fi

# Base16 Shell
export THEME="base16-3024"
if [ -z "$THEME" ]; then
    export THEME="base16-3024"
    # export THEME="base16-solarized"
fi
if [ -z "$BACKGROUND" ]; then
    export BACKGROUND="dark"
fi

BASE16_SHELL="$DOTFILES/.config/base16-shell/$THEME.$BACKGROUND.sh"
[[ -s $BASE16_SHELL ]] && source $BASE16_SHELL
source $BASE16_SHELL

export VIRTUAL_ENV_DISABLE_PROMPT=True

export WORKON_HOME=~/virtualenv


[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi


# enable nox support
# To activate completions for zsh you need to have
# bashcompinit enabled in zsh:
autoload -U bashcompinit
bashcompinit

# # Afterwards you can enable completion for nox:
eval "$(register-python-argcomplete nox)"

# Enable startship
eval "$(starship init zsh)"

if [ /usr/local/bin/kubectl ]; then source <(kubectl completion zsh); fi
date "+%s.%N"
# profiling
# zprof # bottom of .zshrc
export DISABLE_AUTO_TITLE=true 


# define the planning ai mono repo code directory
export PAI_MONO_REPO_CODE_DIR=~/code/anaplan/planning-ai-mono
# load all the planning ai mono repo specific environment configuration.
if [ -e $PAI_MONO_REPO_CODE_DIR/.pairc ]; then
    source $PAI_MONO_REPO_CODE_DIR/.pairc
fi
export PATH="/usr/local/opt/openjdk@8/bin:$PATH"
export PATH="/usr/local/opt/openjdk@8/libexec/openjdk.jdk/Contents/Home/bin:$PATH"
export PATH="/Users/eliramshatz/code/anaplan/build-tools/jenkins_pipeline/src:$PATH"
